// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Settings Screen Should render 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        Object {
          "data": Array [
            "Change email",
            "Change password",
            "Delete account",
          ],
          "title": "Account",
        },
        Object {
          "data": Array [
            "Personal Records",
          ],
          "title": "General",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={
      Array [
        0,
        5,
      ]
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text
          style={
            Object {
              "backgroundColor": "#6200ee",
              "color": "#fff",
              "fontFamily": "lato-bold",
              "fontSize": 20,
              "paddingBottom": 2,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 2,
            }
          }
        >
          Account
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "height": 40,
                  "padding": 10,
                }
              }
            >
              Change email
            </Text>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#C8C8C8",
                "height": 0.5,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View>
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "height": 40,
                  "padding": 10,
                }
              }
            >
              Change password
            </Text>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#C8C8C8",
                "height": 0.5,
                "width": "100%",
              }
            }
          />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 16,
                "height": 40,
                "padding": 10,
              }
            }
          >
            Delete account
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
      <View
        onLayout={[Function]}
        style={null}
      >
        <Text
          style={
            Object {
              "backgroundColor": "#6200ee",
              "color": "#fff",
              "fontFamily": "lato-bold",
              "fontSize": 20,
              "paddingBottom": 2,
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingTop": 2,
            }
          }
        >
          General
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <Text
            style={
              Object {
                "fontSize": 16,
                "height": 40,
                "padding": 10,
              }
            }
          >
            Personal Records
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      />
    </View>
  </RCTScrollView>
</View>
`;
